[{"C:\\Users\\samle\\bootcamp\\repositories\\book-search-engine\\client\\src\\index.js":"1","C:\\Users\\samle\\bootcamp\\repositories\\book-search-engine\\client\\src\\App.js":"2","C:\\Users\\samle\\bootcamp\\repositories\\book-search-engine\\client\\src\\pages\\SavedBooks.js":"3","C:\\Users\\samle\\bootcamp\\repositories\\book-search-engine\\client\\src\\pages\\SearchBooks.js":"4","C:\\Users\\samle\\bootcamp\\repositories\\book-search-engine\\client\\src\\components\\Navbar.js":"5","C:\\Users\\samle\\bootcamp\\repositories\\book-search-engine\\client\\src\\components\\LoginForm.js":"6","C:\\Users\\samle\\bootcamp\\repositories\\book-search-engine\\client\\src\\components\\SignupForm.js":"7","C:\\Users\\samle\\bootcamp\\repositories\\book-search-engine\\client\\src\\utils\\auth.js":"8","C:\\Users\\samle\\bootcamp\\repositories\\book-search-engine\\client\\src\\utils\\localStorage.js":"9","C:\\Users\\samle\\bootcamp\\repositories\\book-search-engine\\client\\src\\utils\\API.js":"10","C:\\Users\\samle\\bootcamp\\repositories\\book-search-engine\\client\\src\\utils\\queries.js":"11","C:\\Users\\samle\\bootcamp\\repositories\\book-search-engine\\client\\src\\utils\\mutations.js":"12"},{"size":266,"mtime":1674318817972,"results":"13","hashOfConfig":"14"},{"size":1812,"mtime":1674339483642,"results":"15","hashOfConfig":"14"},{"size":2946,"mtime":1674318817973,"results":"16","hashOfConfig":"14"},{"size":4665,"mtime":1674318817973,"results":"17","hashOfConfig":"14"},{"size":2524,"mtime":1674318817972,"results":"18","hashOfConfig":"14"},{"size":3234,"mtime":1674340382235,"results":"19","hashOfConfig":"14"},{"size":3910,"mtime":1674339872893,"results":"20","hashOfConfig":"14"},{"size":1234,"mtime":1674318817974,"results":"21","hashOfConfig":"14"},{"size":793,"mtime":1674318817974,"results":"22","hashOfConfig":"14"},{"size":1392,"mtime":1674318817974,"results":"23","hashOfConfig":"14"},{"size":243,"mtime":1674335543780,"results":"24","hashOfConfig":"14"},{"size":1372,"mtime":1674339957896,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"3k0b9l",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\samle\\bootcamp\\repositories\\book-search-engine\\client\\src\\index.js",[],["54","55"],"C:\\Users\\samle\\bootcamp\\repositories\\book-search-engine\\client\\src\\App.js",[],"C:\\Users\\samle\\bootcamp\\repositories\\book-search-engine\\client\\src\\pages\\SavedBooks.js",[],"C:\\Users\\samle\\bootcamp\\repositories\\book-search-engine\\client\\src\\pages\\SearchBooks.js",[],"C:\\Users\\samle\\bootcamp\\repositories\\book-search-engine\\client\\src\\components\\Navbar.js",[],"C:\\Users\\samle\\bootcamp\\repositories\\book-search-engine\\client\\src\\components\\LoginForm.js",["56","57"],"// see SignupForm.js for comments\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { useMutation } from '@apollo/client';\n\nimport { loginUser } from '../utils/API';\nimport Auth from '../utils/auth';\nimport { LOGIN_USER } from '../utils/mutations';\nimport { QUERY_ME } from '../utils/queries';\n\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n\n  const [loginUser, {error} ] = useMutation(LOGIN_USER, {\n    update( cache, {data: { loginUser } }) {\n      try{\n        const { user } = cache.readQuery({ query: QUERY_ME });\n\n        cache.writeQuery({\n          query: QUERY_ME,\n          data: { user: [loginUser, ...user ] },\n        })\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  })\n\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      // const response = await loginUser(userFormData);\n\n      // if (!response.ok) {\n      //   throw new Error('something went wrong!');\n      // }\n\n      // const { token, user } = await response.json();\n      // console.log(user);\n      const { data } = await loginUser({\n        variables: userFormData\n      })\n\n      Auth.login(data.loginUser.token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your email'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","C:\\Users\\samle\\bootcamp\\repositories\\book-search-engine\\client\\src\\components\\SignupForm.js",["58","59","60"],"import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { useMutation } from '@apollo/client';\nimport { createUser } from '../utils/API';\nimport Auth from '../utils/auth';\n\nimport { ADD_USER } from '../utils/mutations';\nimport { QUERY_ME } from '../utils/queries';\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [addUser, { error } ] = useMutation(ADD_USER)//, {\n  //   update(cache, { data: {addUser } }) {\n  //     try {\n  //       const { user } = cache.readQuery ({ query: QUERY_ME })\n\n  //       cache.createUser({\n  //         query: QUERY_ME,\n  //         data: { user: [addUser, ... user] }\n  //       })\n  //     } catch(e) {\n  //       console.error(e);\n  //     }\n  //   }\n  // })\n\n\n\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      // const response = await createUser(userFormData);\n\n      // if (!response.ok) {\n      //   throw new Error('something went wrong!');\n      // }\n\n      // const { token, user } = await response.json();\n      // console.log(user);\n      const { data } = await addUser({\n        variables: userFormData\n      })\n\n      Auth.login(data.addUser.token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor='username'>Username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your username'\n            name='username'\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Your email address'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n","C:\\Users\\samle\\bootcamp\\repositories\\book-search-engine\\client\\src\\utils\\auth.js",["61"],"// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","C:\\Users\\samle\\bootcamp\\repositories\\book-search-engine\\client\\src\\utils\\localStorage.js",[],"C:\\Users\\samle\\bootcamp\\repositories\\book-search-engine\\client\\src\\utils\\API.js",[],"C:\\Users\\samle\\bootcamp\\repositories\\book-search-engine\\client\\src\\utils\\queries.js",[],"C:\\Users\\samle\\bootcamp\\repositories\\book-search-engine\\client\\src\\utils\\mutations.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":6,"column":10,"nodeType":"68","messageId":"69","endLine":6,"endColumn":19},{"ruleId":"66","severity":1,"message":"70","line":18,"column":22,"nodeType":"68","messageId":"69","endLine":18,"endColumn":27},{"ruleId":"66","severity":1,"message":"71","line":4,"column":10,"nodeType":"68","messageId":"69","endLine":4,"endColumn":20},{"ruleId":"66","severity":1,"message":"72","line":8,"column":10,"nodeType":"68","messageId":"69","endLine":8,"endColumn":18},{"ruleId":"66","severity":1,"message":"70","line":18,"column":21,"nodeType":"68","messageId":"69","endLine":18,"endColumn":26},{"ruleId":"73","severity":1,"message":"74","line":49,"column":1,"nodeType":"75","endLine":49,"endColumn":34},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'loginUser' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'createUser' is defined but never used.","'QUERY_ME' is defined but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]